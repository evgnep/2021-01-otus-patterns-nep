package su.nepom.patterns.home1.model;

import java.util.List;
import java.util.Optional;

/**
 * Интерфейс к универсальному игровому объекту
 * Идея: Объект поддерживает необходимое количество "интерфейсов-функций", каждый из которых позволяет выполнить определенные команды.
 * К примеру, если объект можно поворачивать, у него можно запросить Rotatable, а если перемещать - то Movable.
 */
public interface UObject {
    <T> Optional<T> queryInterface(Class<T> cls);

    /**
     * Вспомогательный интерфейс, который реализуют классы-реализаторы интерфейсов-функций объекта.
     * canQueryAs возвращает список интерфейсов, который реализует такой класс и которые можно запросить у объекта
     * Можно переделать на рефлексию с аннотациями, но пока удобней так
     */
    interface Part {
        List<Class<?>> canQueryAs();
    }
}
